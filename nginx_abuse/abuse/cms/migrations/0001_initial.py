# Generated by Django 3.0 on 2020-09-25 17:32

from django.db import migrations, models
import django.db.models.deletion
import feincms.module.medialibrary.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('medialibrary', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
            ],
            options={
                'verbose_name': 'Район',
                'verbose_name_plural': 'Районы',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='Город')),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cms.Area')),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='пункт FAQ')),
            ],
        ),
        migrations.CreateModel(
            name='HelpFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(null=True, upload_to='', verbose_name='Файл')),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Будет отображаться на кнопке', max_length=256, verbose_name='Назание ссылки')),
                ('link', models.CharField(help_text='Для навигации', max_length=1024, verbose_name='ссылка')),
                ('info', models.CharField(blank=True, max_length=50, null=True, verbose_name='Описание')),
                ('target', models.CharField(blank=True, choices=[('', 'Открывать в текущей вкладке'), ('_blank', 'Открывать в новой вкладке')], default=('', 'Открывать в текущей вкладке'), max_length=64)),
            ],
            options={
                'verbose_name': 'Ссылка',
                'verbose_name_plural': 'Ссылки',
            },
        ),
        migrations.CreateModel(
            name='Organizations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=False, help_text='Подтвердить после проверки данных организации', verbose_name='Действующая организация')),
                ('title', models.CharField(max_length=256, verbose_name='Название организации')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('working_hours', models.CharField(blank=True, max_length=50, null=True, verbose_name='Время работы')),
                ('adress', models.CharField(blank=True, max_length=256, null=True, verbose_name='адресс')),
                ('lat', models.CharField(blank=True, max_length=32, null=True)),
                ('lng', models.CharField(blank=True, max_length=32, null=True)),
                ('desctiption', models.TextField(blank=True, null=True, verbose_name='описание')),
                ('tel1', models.CharField(blank=True, max_length=32, null=True, verbose_name='Телефон')),
                ('tel2', models.CharField(blank=True, max_length=16, null=True, verbose_name='Телефон')),
                ('tel3', models.CharField(blank=True, max_length=16, null=True, verbose_name='Телефон')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Сайт')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='электронная почта')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cms.City', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Организация',
                'verbose_name_plural': 'Организации',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='вопрос')),
                ('is_active', models.BooleanField(default=True, verbose_name='Опрос активен')),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
            ],
            options={
                'verbose_name': 'Область',
                'verbose_name_plural': 'Области',
            },
        ),
        migrations.CreateModel(
            name='ServicesConf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Конфиденциальнось',
                'verbose_name_plural': 'Конфиденциальнось',
            },
        ),
        migrations.CreateModel(
            name='ServicesPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Оплата услуг',
                'verbose_name_plural': 'Оплата услуг',
            },
        ),
        migrations.CreateModel(
            name='ServicesStuff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Вещество',
                'verbose_name_plural': 'Вещества',
            },
        ),
        migrations.CreateModel(
            name='ServicesType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Вид деятельности',
                'verbose_name_plural': 'Виды деятельности',
            },
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('description', models.TextField()),
                ('time', models.CharField(choices=[('1', 'Полная занятость'), ('2', 'Частичная занятость'), ('3', 'Подработка'), ('4', 'Гибкий график')], max_length=64)),
                ('ownership', models.CharField(choices=[('1', 'Государственная'), ('2', 'Комерческая'), ('3', 'Общественная организация'), ('4', 'Религиозная организация')], max_length=64)),
                ('employer', models.CharField(max_length=256)),
                ('tel', models.CharField(max_length=30)),
                ('adress', models.TextField()),
                ('position', models.CharField(max_length=256)),
                ('email', models.EmailField(max_length=254)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.City')),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='Наименование')),
                ('link', models.URLField(verbose_name='Ссылка')),
                ('picture', feincms.module.medialibrary.fields.MediaFileForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='medialibrary.MediaFile', verbose_name='Выбрать картинку')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationServices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stuff', models.CharField(choices=[('0', 'Не указано'), ('1', 'Опиоиды'), ('2', 'Психотропы'), ('3', 'Галлюциногены')], max_length=64, verbose_name='Вещества')),
                ('conf', models.CharField(choices=[('0', 'Не указано'), ('1', 'Анонимно'), ('2', 'Постановка на учет')], max_length=64, verbose_name='Конфиденциальность')),
                ('payment', models.CharField(choices=[('0', 'Не указано'), ('1', 'Платно'), ('2', 'Бесплатно')], max_length=64, verbose_name='Оплата')),
                ('org_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='cms.ServicesType', verbose_name='Вид деятельности')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Organizations')),
            ],
        ),
        migrations.CreateModel(
            name='FAQlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Заголовок статьи')),
                ('text', models.TextField(verbose_name='Содержимое статьи')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.FAQ')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('start_date', models.DateField()),
                ('start_time', models.CharField(max_length=30)),
                ('event_type', models.CharField(choices=[('1', 'Культурные'), ('2', 'Образовательные'), ('3', 'Просветительские'), ('4', 'Религиозные'), ('5', 'Спортивные'), ('6', 'Отдых'), ('7', 'Профориентация'), ('8', 'Тренинги')], max_length=32)),
                ('payment', models.CharField(max_length=64)),
                ('adress', models.TextField()),
                ('organizator', models.TextField()),
                ('description', models.TextField()),
                ('tel', models.CharField(max_length=32)),
                ('person', models.CharField(max_length=64, verbose_name='Контактное лицо')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.City')),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Вариант для ответа')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Question')),
            ],
        ),
        migrations.AddField(
            model_name='area',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Region'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Choice')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cms.Question')),
            ],
        ),
    ]
